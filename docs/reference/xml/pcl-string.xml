<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="PclString">
<refmeta>
<refentrytitle>PclString</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>PCL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>PclString</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;pcl.h&gt;


            <link linkend="PclString-struct">PclString</link>;
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-string-get-type-object">pcl_string_get_type_object</link>      (void);
<link linkend="gboolean">gboolean</link>    <link linkend="pcl-string-resize">pcl_string_resize</link>               (<link linkend="PclObject">PclObject</link> *self,
                                             <link linkend="glong">glong</link> length);
<link linkend="gchar">gchar</link>*      <link linkend="pcl-string-as-string">pcl_string_as_string</link>            (<link linkend="PclObject">PclObject</link> *object);
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-string-from-string">pcl_string_from_string</link>          (const <link linkend="gchar">gchar</link> *v_string);
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-string-from-string-and-size">pcl_string_from_string_and_size</link> (const <link linkend="gchar">gchar</link> *v_string,
                                             <link linkend="gssize">gssize</link> size);
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-string-from-format">pcl_string_from_format</link>          (const <link linkend="gchar">gchar</link> *format,
                                             ...);
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-string-from-format-va">pcl_string_from_format_va</link>       (const <link linkend="gchar">gchar</link> *format,
                                             <link linkend="va-list">va_list</link> va);
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-string-intern-from-string">pcl_string_intern_from_string</link>   (const <link linkend="gchar">gchar</link> *string);
<link linkend="void">void</link>        <link linkend="pcl-string-intern-in-place">pcl_string_intern_in_place</link>      (<link linkend="PclObject">PclObject</link> **p_object);
<link linkend="void">void</link>        <link linkend="pcl-string-concat">pcl_string_concat</link>               (<link linkend="PclObject">PclObject</link> **p_object,
                                             <link linkend="PclObject">PclObject</link> *string);
<link linkend="void">void</link>        <link linkend="pcl-string-concat-and-del">pcl_string_concat_and_del</link>       (<link linkend="PclObject">PclObject</link> **p_object,
                                             <link linkend="PclObject">PclObject</link> *string);
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-string-join">pcl_string_join</link>                 (<link linkend="PclObject">PclObject</link> *separator,
                                             <link linkend="PclObject">PclObject</link> *sequence);
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-string-format">pcl_string_format</link>               (<link linkend="PclObject">PclObject</link> *format,
                                             <link linkend="PclObject">PclObject</link> *args);
#define     <link linkend="PCL-STRING-AS-STRING:CAPS">PCL_STRING_AS_STRING</link>            (obj)
#define     <link linkend="PCL-STRING-GET-SIZE:CAPS">PCL_STRING_GET_SIZE</link>             (obj)

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="PclObject">PclObject</link>
         +----PclString
</synopsis>

</refsect1>



<refsect1>
<title>Implemented Interfaces</title>
<para>
PclString implements
 <link linkend="PclSequence">PclSequence</link>.</para>

</refsect1>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="PclString-struct"/>PclString</title>
<indexterm><primary>PclString</primary></indexterm><programlisting>typedef struct _PclString PclString;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="pcl-string-get-type-object"/>pcl_string_get_type_object ()</title>
<indexterm><primary>pcl_string_get_type_object</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_string_get_type_object      (void);</programlisting>
<para>
Returns the type object for <link linkend="PclString"><type>PclString</type></link>.  During runtime this is the built-in
object <literal>str</literal>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a borrowed reference to the type object for <link linkend="PclString"><type>PclString</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-string-resize"/>pcl_string_resize ()</title>
<indexterm><primary>pcl_string_resize</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    pcl_string_resize               (<link linkend="PclObject">PclObject</link> *self,
                                             <link linkend="glong">glong</link> length);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>length</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-string-as-string"/>pcl_string_as_string ()</title>
<indexterm><primary>pcl_string_as_string</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      pcl_string_as_string            (<link linkend="PclObject">PclObject</link> *object);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-string-from-string"/>pcl_string_from_string ()</title>
<indexterm><primary>pcl_string_from_string</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_string_from_string          (const <link linkend="gchar">gchar</link> *v_string);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>v_string</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-string-from-string-and-size"/>pcl_string_from_string_and_size ()</title>
<indexterm><primary>pcl_string_from_string_and_size</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_string_from_string_and_size (const <link linkend="gchar">gchar</link> *v_string,
                                             <link linkend="gssize">gssize</link> size);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>v_string</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-string-from-format"/>pcl_string_from_format ()</title>
<indexterm><primary>pcl_string_from_format</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_string_from_format          (const <link linkend="gchar">gchar</link> *format,
                                             ...);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-string-from-format-va"/>pcl_string_from_format_va ()</title>
<indexterm><primary>pcl_string_from_format_va</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_string_from_format_va       (const <link linkend="gchar">gchar</link> *format,
                                             <link linkend="va-list">va_list</link> va);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>va</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-string-intern-from-string"/>pcl_string_intern_from_string ()</title>
<indexterm><primary>pcl_string_intern_from_string</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_string_intern_from_string   (const <link linkend="gchar">gchar</link> *string);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>string</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-string-intern-in-place"/>pcl_string_intern_in_place ()</title>
<indexterm><primary>pcl_string_intern_in_place</primary></indexterm><programlisting><link linkend="void">void</link>        pcl_string_intern_in_place      (<link linkend="PclObject">PclObject</link> **p_object);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>p_object</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-string-concat"/>pcl_string_concat ()</title>
<indexterm><primary>pcl_string_concat</primary></indexterm><programlisting><link linkend="void">void</link>        pcl_string_concat               (<link linkend="PclObject">PclObject</link> **p_object,
                                             <link linkend="PclObject">PclObject</link> *string);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>p_object</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>string</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-string-concat-and-del"/>pcl_string_concat_and_del ()</title>
<indexterm><primary>pcl_string_concat_and_del</primary></indexterm><programlisting><link linkend="void">void</link>        pcl_string_concat_and_del       (<link linkend="PclObject">PclObject</link> **p_object,
                                             <link linkend="PclObject">PclObject</link> *string);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>p_object</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>string</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-string-join"/>pcl_string_join ()</title>
<indexterm><primary>pcl_string_join</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_string_join                 (<link linkend="PclObject">PclObject</link> *separator,
                                             <link linkend="PclObject">PclObject</link> *sequence);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>separator</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sequence</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-string-format"/>pcl_string_format ()</title>
<indexterm><primary>pcl_string_format</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_string_format               (<link linkend="PclObject">PclObject</link> *format,
                                             <link linkend="PclObject">PclObject</link> *args);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>args</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="PCL-STRING-AS-STRING:CAPS"/>PCL_STRING_AS_STRING()</title>
<indexterm><primary>PCL_STRING_AS_STRING</primary></indexterm><programlisting>#define     PCL_STRING_AS_STRING(obj)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="PCL-STRING-GET-SIZE:CAPS"/>PCL_STRING_GET_SIZE()</title>
<indexterm><primary>PCL_STRING_GET_SIZE</primary></indexterm><programlisting>#define     PCL_STRING_GET_SIZE(obj)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
