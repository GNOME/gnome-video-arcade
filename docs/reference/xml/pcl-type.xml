<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="PclType">
<refmeta>
<refentrytitle>PclType</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>PCL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>PclType</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;pcl.h&gt;


            <link linkend="PclType-struct">PclType</link>;
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-type-get-type-object">pcl_type_get_type_object</link>        (void);
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-type-new">pcl_type_new</link>                    (<link linkend="GType">GType</link> g_type,
                                             const <link linkend="gchar">gchar</link> *name);
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-type-get-attr">pcl_type_get_attr</link>               (<link linkend="PclObject">PclObject</link> *type,
                                             const <link linkend="gchar">gchar</link> *name);
<link linkend="gint">gint</link>        <link linkend="pcl-type-is-subtype">pcl_type_is_subtype</link>             (<link linkend="PclObject">PclObject</link> *subtype,
                                             <link linkend="PclObject">PclObject</link> *of);
#define     <link linkend="PCL-GET-TYPE-NAME:CAPS">PCL_GET_TYPE_NAME</link>               (obj)

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="PclObject">PclObject</link>
         +----<link linkend="PclContainer">PclContainer</link>
               +----PclType
</synopsis>

</refsect1>








<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="PclType-struct"/>PclType</title>
<indexterm><primary>PclType</primary></indexterm><programlisting>typedef struct _PclType PclType;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="pcl-type-get-type-object"/>pcl_type_get_type_object ()</title>
<indexterm><primary>pcl_type_get_type_object</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_type_get_type_object        (void);</programlisting>
<para>
Returns the type object for <link linkend="PclType"><type>PclType</type></link>.  During runtime this is the built-in
object <literal>type</literal>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a borrowed reference to the type object for <link linkend="PclType"><type>PclType</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-type-new"/>pcl_type_new ()</title>
<indexterm><primary>pcl_type_new</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_type_new                    (<link linkend="GType">GType</link> g_type,
                                             const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>g_type</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-type-get-attr"/>pcl_type_get_attr ()</title>
<indexterm><primary>pcl_type_get_attr</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_type_get_attr               (<link linkend="PclObject">PclObject</link> *type,
                                             const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-type-is-subtype"/>pcl_type_is_subtype ()</title>
<indexterm><primary>pcl_type_is_subtype</primary></indexterm><programlisting><link linkend="gint">gint</link>        pcl_type_is_subtype             (<link linkend="PclObject">PclObject</link> *subtype,
                                             <link linkend="PclObject">PclObject</link> *of);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>subtype</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>of</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="PCL-GET-TYPE-NAME:CAPS"/>PCL_GET_TYPE_NAME()</title>
<indexterm><primary>PCL_GET_TYPE_NAME</primary></indexterm><programlisting>#define     PCL_GET_TYPE_NAME(obj)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
