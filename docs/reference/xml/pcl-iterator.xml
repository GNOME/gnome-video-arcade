<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="PclIterator">
<refmeta>
<refentrytitle>PclIterator</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>PCL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>PclIterator</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;pcl.h&gt;


            <link linkend="PclIterator-struct">PclIterator</link>;
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-iterator-next">pcl_iterator_next</link>               (<link linkend="PclObject">PclObject</link> *object);
<link linkend="gboolean">gboolean</link>    <link linkend="pcl-iterator-stop">pcl_iterator_stop</link>               (<link linkend="PclObject">PclObject</link> *object);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="PclObject">PclObject</link>
         +----<link linkend="PclContainer">PclContainer</link>
               +----PclIterator
                     +----<link linkend="PclCallableIterator">PclCallableIterator</link>
                     +----<link linkend="PclDictIterator">PclDictIterator</link>
                     +----<link linkend="PclEnumerate">PclEnumerate</link>
                     +----<link linkend="PclFile">PclFile</link>
                     +----<link linkend="PclGenerator">PclGenerator</link>
                     +----<link linkend="PclRange">PclRange</link>
                     +----<link linkend="PclReversed">PclReversed</link>
                     +----<link linkend="PclSequenceIterator">PclSequenceIterator</link>
                     +----<link linkend="PclZip">PclZip</link>
</synopsis>

</refsect1>








<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="PclIterator-struct"/>PclIterator</title>
<indexterm><primary>PclIterator</primary></indexterm><programlisting>typedef struct _PclIterator PclIterator;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="pcl-iterator-next"/>pcl_iterator_next ()</title>
<indexterm><primary>pcl_iterator_next</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_iterator_next               (<link linkend="PclObject">PclObject</link> *object);</programlisting>
<para>
If <parameter>object</parameter> is an instance of <link linkend="PclIterator"><type>PclIterator</type></link>, returns the next item from
the iteration.  If the end of the iteration has been reached, or has
been terminated with <link linkend="pcl-iterator-stop"><function>pcl_iterator_stop()</function></link>, returns <literal>NULL</literal> with no
exception set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PclObject"><type>PclObject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new reference to the next item in the iteration, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-iterator-stop"/>pcl_iterator_stop ()</title>
<indexterm><primary>pcl_iterator_stop</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    pcl_iterator_stop               (<link linkend="PclObject">PclObject</link> *object);</programlisting>
<para>
If <parameter>object</parameter> is an instance of <link linkend="PclIterator"><type>PclIterator</type></link>, prematurely terminates the
iteration such that subsequent calls to <link linkend="pcl-iterator-next"><function>pcl_iterator_next()</function></link> will always
return <literal>NULL</literal>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PclObject"><type>PclObject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <literal>TRUE</literal> if successful, or <literal>FALSE</literal> if an exception was raised
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
