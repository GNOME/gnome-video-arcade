<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="PclModule">
<refmeta>
<refentrytitle>PclModule</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>PCL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>PclModule</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;pcl.h&gt;


            <link linkend="PclModule-struct">PclModule</link>;
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-module-get-type-object">pcl_module_get_type_object</link>      (void);
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-module-new">pcl_module_new</link>                  (const <link linkend="gchar">gchar</link> *name);
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-module-get-dict">pcl_module_get_dict</link>             (<link linkend="PclObject">PclObject</link> *module);
<link linkend="gchar">gchar</link>*      <link linkend="pcl-module-get-name">pcl_module_get_name</link>             (<link linkend="PclObject">PclObject</link> *module);
<link linkend="gchar">gchar</link>*      <link linkend="pcl-module-get-filename">pcl_module_get_filename</link>         (<link linkend="PclObject">PclObject</link> *module);
<link linkend="gboolean">gboolean</link>    <link linkend="pcl-module-add-int">pcl_module_add_int</link>              (<link linkend="PclObject">PclObject</link> *module,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="glong">glong</link> value);
<link linkend="gboolean">gboolean</link>    <link linkend="pcl-module-add-float">pcl_module_add_float</link>            (<link linkend="PclObject">PclObject</link> *module,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="gdouble">gdouble</link> value);
<link linkend="gboolean">gboolean</link>    <link linkend="pcl-module-add-string">pcl_module_add_string</link>           (<link linkend="PclObject">PclObject</link> *module,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *value);
<link linkend="gboolean">gboolean</link>    <link linkend="pcl-module-add-object">pcl_module_add_object</link>           (<link linkend="PclObject">PclObject</link> *module,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="PclObject">PclObject</link> *object);
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-module-init">pcl_module_init</link>                 (const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="PclMethodDef">PclMethodDef</link> *methods,
                                             const <link linkend="gchar">gchar</link> *doc);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="PclObject">PclObject</link>
         +----<link linkend="PclContainer">PclContainer</link>
               +----PclModule
</synopsis>

</refsect1>








<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="PclModule-struct"/>PclModule</title>
<indexterm><primary>PclModule</primary></indexterm><programlisting>typedef struct _PclModule PclModule;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="pcl-module-get-type-object"/>pcl_module_get_type_object ()</title>
<indexterm><primary>pcl_module_get_type_object</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_module_get_type_object      (void);</programlisting>
<para>
Returns the type object for <link linkend="PclModule"><type>PclModule</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a borrowed reference to the type object for <link linkend="PclModule"><type>PclModule</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-module-new"/>pcl_module_new ()</title>
<indexterm><primary>pcl_module_new</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_module_new                  (const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-module-get-dict"/>pcl_module_get_dict ()</title>
<indexterm><primary>pcl_module_get_dict</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_module_get_dict             (<link linkend="PclObject">PclObject</link> *module);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>module</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-module-get-name"/>pcl_module_get_name ()</title>
<indexterm><primary>pcl_module_get_name</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      pcl_module_get_name             (<link linkend="PclObject">PclObject</link> *module);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>module</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-module-get-filename"/>pcl_module_get_filename ()</title>
<indexterm><primary>pcl_module_get_filename</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      pcl_module_get_filename         (<link linkend="PclObject">PclObject</link> *module);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>module</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-module-add-int"/>pcl_module_add_int ()</title>
<indexterm><primary>pcl_module_add_int</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    pcl_module_add_int              (<link linkend="PclObject">PclObject</link> *module,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="glong">glong</link> value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>module</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-module-add-float"/>pcl_module_add_float ()</title>
<indexterm><primary>pcl_module_add_float</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    pcl_module_add_float            (<link linkend="PclObject">PclObject</link> *module,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="gdouble">gdouble</link> value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>module</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-module-add-string"/>pcl_module_add_string ()</title>
<indexterm><primary>pcl_module_add_string</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    pcl_module_add_string           (<link linkend="PclObject">PclObject</link> *module,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>module</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-module-add-object"/>pcl_module_add_object ()</title>
<indexterm><primary>pcl_module_add_object</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    pcl_module_add_object           (<link linkend="PclObject">PclObject</link> *module,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="PclObject">PclObject</link> *object);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>module</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-module-init"/>pcl_module_init ()</title>
<indexterm><primary>pcl_module_init</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_module_init                 (const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="PclMethodDef">PclMethodDef</link> *methods,
                                             const <link linkend="gchar">gchar</link> *doc);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>methods</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>doc</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
