<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="PclMethod">
<refmeta>
<refentrytitle>PclMethod</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>PCL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>PclMethod</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;pcl.h&gt;


            <link linkend="PclMethod-struct">PclMethod</link>;
            <link linkend="PclMethodDef">PclMethodDef</link>;
enum        <link linkend="PclMethodFlags">PclMethodFlags</link>;
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-method-get-type-object">pcl_method_get_type_object</link>      (void);
<link linkend="PclObject">PclObject</link>*  <link linkend="pcl-method-new">pcl_method_new</link>                  (<link linkend="PclMethodDef">PclMethodDef</link> *def,
                                             <link linkend="PclObject">PclObject</link> *self,
                                             <link linkend="PclObject">PclObject</link> *module);
#define     <link linkend="PCL-METHOD-GET-FLAGS:CAPS">PCL_METHOD_GET_FLAGS</link>            (obj)
#define     <link linkend="PCL-METHOD-GET-FUNCTION:CAPS">PCL_METHOD_GET_FUNCTION</link>         (obj)
#define     <link linkend="PCL-METHOD-GET-NAME:CAPS">PCL_METHOD_GET_NAME</link>             (obj)
#define     <link linkend="PCL-METHOD-GET-SELF:CAPS">PCL_METHOD_GET_SELF</link>             (obj)

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="PclObject">PclObject</link>
         +----<link linkend="PclContainer">PclContainer</link>
               +----PclMethod
</synopsis>

</refsect1>








<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="PclMethod-struct"/>PclMethod</title>
<indexterm><primary>PclMethod</primary></indexterm><programlisting>typedef struct _PclMethod PclMethod;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="PclMethodDef"/>PclMethodDef</title>
<indexterm><primary>PclMethodDef</primary></indexterm><programlisting>typedef struct {
        const gchar *name;
        PclCFunction func;
        PclMethodFlags flags;
        const gchar *doc;
        glong offset;
} PclMethodDef;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="PclMethodFlags"/>enum PclMethodFlags</title>
<indexterm><primary>PclMethodFlags</primary></indexterm><programlisting>typedef enum {
        PCL_METHOD_FLAG_VARARGS         = 1 &lt;&lt; 0,
        PCL_METHOD_FLAG_KEYWORDS        = 1 &lt;&lt; 1,
        PCL_METHOD_FLAG_ONEARG          = 1 &lt;&lt; 2,
        PCL_METHOD_FLAG_NOARGS          = 1 &lt;&lt; 3,
        PCL_METHOD_FLAG_CLASS           = 1 &lt;&lt; 4
} PclMethodFlags;
</programlisting>
<para>
Used to check or determine characteristics of a <link linkend="PclMethodDef"><type>PclMethodDef</type></link> struct.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><literal>PCL_METHOD_FLAG_VARARGS</literal></term>
<listitem><simpara>
     Accept variable-length arguments.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>PCL_METHOD_FLAG_KEYWORDS</literal></term>
<listitem><simpara>
     Accept keyword arguments.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>PCL_METHOD_FLAG_ONEARG</literal></term>
<listitem><simpara>
     Accept exactly one argument.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>PCL_METHOD_FLAG_NOARGS</literal></term>
<listitem><simpara>
     Do not accept any arguments.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>PCL_METHOD_FLAG_CLASS</literal></term>
<listitem><simpara>
     This is a class method.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-method-get-type-object"/>pcl_method_get_type_object ()</title>
<indexterm><primary>pcl_method_get_type_object</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_method_get_type_object      (void);</programlisting>
<para>
Returns the type object for <link linkend="PclMethod"><type>PclMethod</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a borrowed reference to the type object for <link linkend="PclMethod"><type>PclMethod</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pcl-method-new"/>pcl_method_new ()</title>
<indexterm><primary>pcl_method_new</primary></indexterm><programlisting><link linkend="PclObject">PclObject</link>*  pcl_method_new                  (<link linkend="PclMethodDef">PclMethodDef</link> *def,
                                             <link linkend="PclObject">PclObject</link> *self,
                                             <link linkend="PclObject">PclObject</link> *module);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>def</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>module</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="PCL-METHOD-GET-FLAGS:CAPS"/>PCL_METHOD_GET_FLAGS()</title>
<indexterm><primary>PCL_METHOD_GET_FLAGS</primary></indexterm><programlisting>#define     PCL_METHOD_GET_FLAGS(obj)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="PCL-METHOD-GET-FUNCTION:CAPS"/>PCL_METHOD_GET_FUNCTION()</title>
<indexterm><primary>PCL_METHOD_GET_FUNCTION</primary></indexterm><programlisting>#define     PCL_METHOD_GET_FUNCTION(obj)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="PCL-METHOD-GET-NAME:CAPS"/>PCL_METHOD_GET_NAME()</title>
<indexterm><primary>PCL_METHOD_GET_NAME</primary></indexterm><programlisting>#define     PCL_METHOD_GET_NAME(obj)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="PCL-METHOD-GET-SELF:CAPS"/>PCL_METHOD_GET_SELF()</title>
<indexterm><primary>PCL_METHOD_GET_SELF</primary></indexterm><programlisting>#define     PCL_METHOD_GET_SELF(obj)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
